---
import type { MarkdownHeading } from 'astro';
import PostTocList from './PostTocList.astro';

interface Props {
  data: MarkdownHeading[];
}

const { data } = Astro.props;

export interface ListItem {
  depth: number;
  slug: string;
  text: string;
  children: ListItem[];
}
const list: ListItem[] = [];

function treeTocList(treeList: ListItem[], item: MarkdownHeading): ListItem[] {
  if (treeList.length === 0) {
    treeList.push({
      depth: item.depth,
      slug: item.slug,
      text: item.text,
      children: [],
    });
    return treeList;
  }
  const lastItem = treeList[treeList.length - 1]!;
  if (item.depth <= lastItem.depth) {
    treeList.push({
      depth: item.depth,
      slug: item.slug,
      text: item.text,
      children: [],
    });
    return treeList;
  }
  lastItem.children = treeTocList(lastItem.children, item);
  return treeList;
}

data.forEach((item) => {
  treeTocList(list, item);
});
---

<div class="absolute left-full top-0 hidden h-full max-w-200 pl-10 lg:block">
  <div class="sticky top-14 w-full truncate text-sm lh-loose">
    <PostTocList data={list} />
  </div>
</div>
